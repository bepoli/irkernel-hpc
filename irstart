#!/usr/bin/env bash

version="4.1.2-0"

# default params
name='ir'
kernel=0

while getopts ":s:n:b:kh" opt; do
  case $opt in
    h)
      echo "
      IRkernel-HPC version $version

      Usage:
      ./irstart -s STR [-n STR] [-b STR] [-kh]

      -h Display this message and exit.
      -s Path to image (local or remote. If pulling from a docker registry, prepend docker://).
      -n Name of the Singularity instance and jupyter kernel (Default: ir).
      -b User-bind path specification, wrapper for Singularity option --bind.
      -k Create a jupyter R kernel using this Singularity instance.
      "
      exit 0
      ;;
    s)
      imgpath="$OPTARG"
      ;;
    n)
      name="$OPTARG"
      ;;
    b)
      binds="$OPTARG"
      ;;
    k)
      kernel=1
      ;;
    \?)
      echo "Invalid option -$OPTARG" >&2
      exit 1
      ;;
    :)
      echo "Option -$OPTARG requires an argument." >&2
      exit 1
      ;;
  esac
done

if [ -n "$binds" ]; then
  bindpaths="--bind $binds"
else
  bindpaths=""
fi

singularity instance start $bindpaths $imgpath $name

if [ "$kernel" -eq 1 ]; then
singularity exec instance://$name /usr/lib/R/bin/R --vanilla <<code
if(!'IRkernel' %in% installed.packages()) install.packages('IRkernel')
IRkernel::installspec(name = "$name", displayname = "$name")
code
sed -i "s|\[\"/usr/lib/R/bin/R\"|[\"$(which singularity)\", \"exec\", \"instance://${name}\", \"/usr/lib/R/bin/R\"|" $HOME/.local/share/jupyter/kernels/$name/kernel.json
fi
